# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: ostap 

on:
  push:
    branches: [ test ]
  pull_request:
    branches: [ test ]
jobs:
  test_docker:
     runs-on: ubuntu-latest 
     steps:
       - uses: actions/checkout@v2
       - name: Install dependencies
         run: |
          ls 
       - uses: cvmfs-contrib/github-action-cvmfs@v2
       - name: Build
         run: |
          ls /cvmfs/sft.cern.ch 
          docker  create -v  /osya --name ostap-build    gitlab-registry.cern.ch/lhcb-core/lbdocker/centos7-build:latest 
          docker cp  /home/runner/work/ostap/ostap/  ostap-build:/osya
          docker run      -v /cvmfs:/cvmfs:shared -u:0  --volumes-from ostap-build  --security-opt seccomp=unconfined gitlab-registry.cern.ch/lhcb-core/lbdocker/centos7-build:latest /bin/bash -c "cd /osya/ostap  &&  ./scripts/bootstrap dev4python2/latest x86_64-centos7-gcc8-opt"
       - name: Test
         run: |
          ls /cvmfs/sft.cern.ch 
          docker run      -v /cvmfs:/cvmfs:shared -u:0  --volumes-from ostap-build  --security-opt seccomp=unconfined gitlab-registry.cern.ch/lhcb-core/lbdocker/centos7-build:latest /bin/bash -c "cd /osya/ostap  &&  ./scripts/test dev4python2/latest x86_64-centos7-gcc8-opt"
       - name: copy artifacts
         if: always()
         run: |
            docker cp  ostap-build:/osya/ostap/build .
       - name: Archive production artifacts
         if: always()
         uses: actions/upload-artifact@v2
         with:
          name: test
          path: build/Testing
