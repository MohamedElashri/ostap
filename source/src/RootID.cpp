// ============================================================================
// Include files 
// ============================================================================
// STD&STL
// ============================================================================
#include <string>
// ============================================================================
// ROOT 
// ============================================================================
#include "TROOT.h"
#include "TObject.h"
// ============================================================================
// Ostap
// ============================================================================
#include "Ostap/RootID.h"
// ============================================================================
/** @file 
 *  Implementation file for function Ostap::Utils::rootID
 *  @date 2020-09-02 
 *  @author Vanya Belyaev Ivan.Belyaev@itep.ru
 */
// ============================================================================
/** @fn rootID 
 *  Find "not-used" name in ROOT 
 *  @see TROOT::FindObject 
 *  @author Vanya Belyaev
 *  @date   2020-09-02
 */
// ============================================================================
std::string Ostap::Utils::rootID ( const std::string& prefix )
{
  TROOT* root = ROOT::GetROOT() ;
  if ( !root ) { return prefix + "0000" ; }
  //
  for ( unsigned int label = 1000 ; label < 10000000 ; ++label )
  {
    const std::string tag { prefix + std::to_string ( label ) } ;
    const TObject* obj = root->FindObject ( tag.c_str () ) ;  
    if ( nullptr == obj ) { return tag ; }
  }
  return prefix + "0000" ;
}
// ============================================================================
//                                                                     The END 
// ============================================================================

